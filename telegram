#include <ESP8266WiFi.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include "auth.h"

//dht11
#include <DHT.h>
#define DHTPIN 2
DHT dht(DHTPIN, DHT11);
float temp;
float hum;
int tempSet = 25;

//timer
#include <SimpleTimer.h> 
SimpleTimer timer;


WiFiClientSecure client;
UniversalTelegramBot bot(BOTtoken, client);

int Bot_mtbs = 1000; //mean time between scan messages
long Bot_lasttime;   //last time messages' scan has been done
bool Start = false;

const int ledPin = 4;
int ledStatus = 0;

void getDHT(){
  hum = dht.readHumidity(); 
  temp = dht.readTemperature();
  Serial.print("Влажность: ");
  Serial.print(hum);
  Serial.print(" %\t");
  Serial.print("Температура: ");
  Serial.print(temp);
  Serial.println(" *C ");
}

  void handleNewMessages(int numNewMessages) {
  Serial.println("handleNewMessages");
  Serial.println(String(numNewMessages));

  for (int i=0; i<numNewMessages; i++) {
    String chat_id = String(bot.messages[i].chat_id);
    String text = bot.messages[i].text;

    String from_name = bot.messages[i].from_name;
    if (from_name == "") from_name = "Guest";

    if (text == "/ledon") {
      digitalWrite(ledPin, HIGH);   // turn the LED on (HIGH is the voltage level)
      ledStatus = 1;
      bot.sendMessage(chat_id, "Led is ON", "");
    }

    if (text == "/ledoff") {
      ledStatus = 0;
      digitalWrite(ledPin, LOW);    // turn the LED off (LOW is the voltage level)
      bot.sendMessage(chat_id, "Led is OFF", "");
    }

    if (text == "/status") {
      if(ledStatus){
        bot.sendMessage(chat_id, "Led is ON", "");
      } else {
        bot.sendMessage(chat_id, "Led is OFF", "");
      }
    }
    
    if (text == "/dht"){
      bot.sendMessage(chat_id,"Температура в бараке");
     bot.sendMessage(chat_id, String(temp) + "  C");
     bot.sendMessage(chat_id, "Влажность в бараке");
      bot.sendMessage(chat_id, String(hum) + " %");
    }
     if(temp < tempSet){
     bot.sendMessage(chat_id,"Стало холодно пиздец!");
     bot.sendMessage(chat_id, String(temp) + "  C");
  }
 
      if (text == "/start") {
      String welcome = "Welcome to Universal Arduino Telegram Bot library, " + from_name + ".\n";
      welcome += "This is Flash Led Bot example.\n\n";
      welcome += "/ledon : to switch the Led ON\n";
      welcome += "/ledoff : to switch the Led OFF\n";
      welcome += "/status : Returns current status of LED\n";
      welcome += "/dht : Show DHT sensor value";
      bot.sendMessage(chat_id, welcome, "Markdown");
    }
   }
}


void setup() {
  Serial.begin(115200);
  dht.begin();
  // Set WiFi to station mode and disconnect from an AP if it was Previously
  // connected
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
  delay(100);

  // attempt to connect to Wifi network:
  Serial.print("Connecting Wifi: ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  
  //timers
timer.setInterval(10000, getDHT);

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  pinMode(ledPin, OUTPUT); // initialize digital ledPin as an output.
  delay(10);
  digitalWrite(ledPin, LOW); // initialize pin as off
}

void loop() {
  if (millis() > Bot_lasttime + Bot_mtbs)  {
    int numNewMessages = bot.getUpdates(bot.last_message_received + 1);

    while(numNewMessages) {
      Serial.println("got response");
      handleNewMessages(numNewMessages);
      numNewMessages = bot.getUpdates(bot.last_message_received + 1);
    }
 
    Bot_lasttime = millis();
  }
  timer.run(); 
}
